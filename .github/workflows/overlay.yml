name: Linux Release

on:
  push:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: ~/.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('overlay/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: cd overlay && yarn install

      - name: Build the Electron app
        run: cd overlay && yarn package

      - name: Make the Electron app
        run: cd overlay && yarn make

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: overlay/out/make/*

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: ~/.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('overlay/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: cd overlay && yarn install

      - name: Build the Electron app
        run: cd overlay && yarn package

      - name: Make the Electron app
        run: cd overlay && yarn make

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: overlay/out/make/*

  release:
    needs: [build-linux, build-windows]
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: ./builds/linux

      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: ./builds/windows

      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::MemeOver_$(date +"%Y.%m.%d_%H-%M")"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./builds/linux/deb/x64/*.deb
            ./builds/linux/rpm/x64/*.rpm
            ./builds/windows/squirrel.windows/x64/*.exe
          tag_name: ${{ steps.tag.outputs.release_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
